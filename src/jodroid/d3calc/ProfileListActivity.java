package jodroid.d3calc;

import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.View;

public class ProfileListActivity extends FragmentActivity
        implements ProfileListFragment.Callbacks {

    private boolean mTwoPane;

    /**
     * autogenerated, except providing the ProfileListContent with the Context
     */
    public void onCreate(Bundle savedInstanceState) {
    	ProfileListContent.setContext(this); // before fragment allocation
    	
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_profile_list);
        
        if (findViewById(R.id.profile_detail_container) != null) {
            mTwoPane = true;
            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
            ((ProfileListFragment) getSupportFragmentManager()
                    .findFragmentById(R.id.profile_listfrag))
                    .setActivateOnItemClick(true);
        } else {
        	setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
        	ProfileListFragment frag = new ProfileListFragment();
        	getSupportFragmentManager().beginTransaction().add(R.id.profile_listfrag, frag).commit();
        }
        
        this.overridePendingTransition(R.anim.enter_from_left, R.anim.exit_to_right);
    }

    /**
     * If an item is selected, we trigger a different action depending on the layout.<br/>
     * On large screen (two panel, landscape), it modifies a fragment.<br/>
     * On small screen (one main frame, portrait), it calls a new activity.<br/>
     */
    @Override
    public void onItemSelected(String id) {
        if (mTwoPane) {
            Bundle arguments = new Bundle();
            arguments.putString(ProfileDetailFragment.ARG_ITEM_ID, id);
            ProfileDetailFragment fragment = new ProfileDetailFragment();
            fragment.setArguments(arguments);
            getSupportFragmentManager().beginTransaction()
                    .replace(R.id.profile_detail_container, fragment)
                    .commit();

        } else {
            Intent detailIntent = new Intent(this, ProfileDetailActivity.class);
            detailIntent.putExtra(ProfileDetailFragment.ARG_ITEM_ID, id);
            startActivity(detailIntent);
        }
    }
    
    /**
     * Button "New Profile" starts a "new player profile input" activity with an intent.
     * @param v
     */
    public void onClickNewProfile(View v) {
    	Intent requestIntent = new Intent(this, jodroid.d3calc.NewProfileActivity.class);
//    	requestIntent.putExtra(jodroid.util.EditTextActivity.EDIT_TEXT_TITLE, getText(R.string.editProjectName));
//    	requestIntent.putExtra(jodroid.util.EditTextActivity.EDIT_TEXT_VALUE, newProjectName);
    	startActivityForResult(requestIntent, jodroid.d3calc.NewProfileActivity.NEWPROFILE_REQUESTCODE);
    }
    
    /**
     * This callback for the startActivityForResult above will insert a new player profile in the list and in the database.<br/>
     * It uses the data provided by the NewProfileActivity.
     * @param requestCode identifies the request code provided by the startActivityForResult
     * @param resultCode result ok or not
     * @param data contains the response datas 
     * @see NewProfileActivity#onClickValidate(View)
     */
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
    	switch (requestCode) {
    	case NewProfileActivity.NEWPROFILE_REQUESTCODE:
    		if (resultCode == RESULT_OK) {
    			ProfileListContent.ProfileItem item = new ProfileListContent.ProfileItem(null,
    					data.getStringExtra(NewProfileActivity.BATTLEHOST_VALUE),
    					data.getStringExtra(NewProfileActivity.BATTLENAME_VALUE),
    					data.getStringExtra(NewProfileActivity.BATTLETAG_VALUE));
    			ProfileListContent.insertProfile(item);
    			ProfileListContent.adapter.notifyDataSetChanged();
//    			refreshList(); // would work but too much code and the notifyDataSetChanged is sufficent
    		} else {
//    			Log.w(this.getClass().getName(), "response cancel");
    		}
    		break;
    	}
    }
    
    public void refreshList() {
    	ProfileListContent.adapter.notifyDataSetChanged();
//    	final Handler handler = new Handler();
//		handler.post(new Runnable() {
//			 @Override
//			 public void run() { 
//				 ProfileListFragment frag = new ProfileListFragment();
//				 getSupportFragmentManager()
//				 	.beginTransaction()
//				 	.replace(R.id.profile_listfrag, frag)
//				 	.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)
//				 	.commit();
//			 }
//		});
    }
}
